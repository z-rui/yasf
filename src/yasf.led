mnu_main = menu(
  submenu("File", menu(
    item("In-&memory Database\tCtrl+N", cb_file_new),
    item("Database &File...\tCtrl+O", cb_file_open),
    separator(),
    item("&Attach...", cb_file_attach),
    item("&Detach...", cb_file_detach),
    separator(),
    item("E&xit", cb_default_close)
  )),
  submenu("Edit", menu(
    submenu("&Create", menu(
      item[dialog="dlg_create_table"]("&Table...", cb_dialog),
      item[dialog="dlg_create_index"]("&Index...", cb_dialog),
      item[dialog="dlg_create_view"]("&View...", cb_dialog),
      item[dialog="dlg_create_trigger"]("Tri&gger...", cb_dialog)
    )),
    item("&Drop...", cb_edit_drop),
    separator(),
    submenu("&Transaction", menu(
      item("&Begin\tCtrl+B", cb_edit_transaction_begin),
	item("&Commit\tCtrl+M", cb_edit_transaction_commit),
      item("&Rollback\tCtrl+R", cb_edit_transaction_rollback)
    )),
    separator(),
    submenu("&Import", menu(
      item("From &SQL...", cb_file_import_sql),
      item("From CS&V...", cb_file_import_csv)
    )),
    item("&Export...", cb_file_export),
    separator(),
    item("&Pragmas...", cb_edit_pragmas)
  )),
  submenu("Help", menu(
    item("&About...", cb_help_about)
  ))
)

ctl_toolbar = hbox(
  button("&Open", cb_file_open),
  button[dialog="dlg_create_table"]("New &Table", cb_dialog)
)

ctl_cmdline = scintilla[
EXPAND="YES",
LEXERLANGUAGE="sql",
SIZE="100x50",
KEYWORDS0="abort action add after all alter analyze and as asc attach autoincrement before begin between by cascade case cast check collate column commit conflict constraint create cross current_date current_time current_timestamp database default deferrable deferred delete desc detach distinct drop each else end escape except exclusive exists explain fail for foreign from full glob group having if ignore immediate in index indexed initially inner insert instead intersect into is isnull join key left like limit match natural no not notnull null of offset on or order outer plan pragma primary query raise recursive references regexp reindex release rename replace restrict right rollback row savepoint select set table temp temporary then to transaction trigger union unique update using vacuum values view virtual when where with without",
STYLEFGCOLOR1="0 128 0",
STYLEFGCOLOR2="0 128 0",
STYLEFGCOLOR4="255 0 255",
STYLEFGCOLOR5="0 0 255",
STYLEBOLD5="YES",
STYLEFGCOLOR6="160 20 20",
STYLEFGCOLOR7="128 0 0",
STYLEFGCOLOR9="0 0 255",
STYLEFGCOLOR10="0 0 0"
]()

dlg_main = dialog[TITLE="Yet Another SQLite Frontend", SHRINK="YES", MENU=mnu_main, MAP_CB=cb_main_init] (vbox(
  ctl_toolbar,
  split[ORIENTATION="VERTICAL"](
    ctl_tree = tree[TITLE0="Databases", SIZE="100x", SHOWRENAME="YES", RIGHTCLICK_CB=cb_tree_rightclick, SHOWRENAME_CB=cb_tree_showrename, RENAME_CB=cb_tree_rename](),
    split[ORIENTATION="HORIZONTAL"](
      ctl_matrix = matrix[NAME="MATVIEW", SIZE="300x150", RESIZEMATRIX="YES", EDITFITVALUE="YES", MULTILINE="YES", EDITION_CB=cb_matrix_edit, CLICK_CB=cb_matrix_click](cb_matrix),
      frame[TITLE="SQL"](hbox(
        ctl_cmdline,
        vbox(
          fill(),
          button[EXPAND="NO"]("E&xecute", cb_execute)
        )
      ))
    )
  )
))

mnu_matrix = menu(
  item("Open editor...", cb_matrix_editor),
  separator(),
  item("Copy\tCtrl+C", cb_matrix_copy),
  item("Paste\tCtrl+V", cb_matrix_paste),
  item("Set to NULL\tDel", cb_matrix_settonull),
  separator(),
  item("Insert record", cb_matrix_addrecord),
  item("Delete record\tCtrl+Del", cb_matrix_delrecord),
  separator(),
  item("Export cell...", cb_matrix_exportcell),
  item("Export table...", cb_matrix_exporttable)
)

dlg_about = messagedlg[DIALOGTYPE="INFORMATION", TITLE="About"]()

dlg_open = filedlg[ALLOWNEW="YES", EXTFILTER="SQLite database (*.db;*.sqlite)|*.db;*.sqlite|All files (*.*)|*.*"]()

dlg_detach = dialog[TITLE="Detach table"](vbox[MARGIN="10x10", GAP=10](
  list[EXPAND="YES", SIZE="120x100", NAME="dblist"](NULL),
  hbox[MARGIN="0x0"](
    fill(),
    button[RESPONSE_=1]("OK", cb_dlg_button),
    button[RESPONSE_=2]("Cancel", cb_dlg_button)
  )
))

mnu_table_leaf = menu(
  item("View data\tEnter", cb_viewdata),
  item("View schema", cb_viewschema),
  separator(),
  item("Rename\tF2", cb_table_rename),
  item("Drop\tDel", cb_drop)
)

mnu_index_leaf = menu(
  item("View schema\tEnter", cb_viewschema),
  separator(),
  item("Drop\tDel", cb_drop)
)

mnu_view_leaf = menu(
  item("View data\tEnter", cb_viewdata),
  item("View schema", cb_viewschema),
  separator(),
  item("Drop\tDel", cb_drop)
)

mnu_trigger_leaf = menu(
  item("View schema", cb_viewschema),
  separator(),
  item("Drop\tDel", cb_drop)
)

mnu_database_branch = menu(
  item("Vacuum", cb_vacuum),
  item("Analyze", cb_analyze)
)

dlg_create_table = dialog[TITLE="Create table", MAP_CB=cb_createindex_map](vbox[EXPAND="YES", GAP="5", NMARGIN="10x10"](
  frame[TITLE="Table name"](hbox[NORMALIZESIZE="VERTICAL", NMARGIN="5x5"](
    list[NAME="dblist", DROPDOWN="YES"](NULL),
    label("."),
    text[NAME="name", EXPAND="HORIZONTAL"](NULL),
    fill()
  )),
  frame[TITLE="Schema"](
    multiline[NAME="schema", EXPAND="YES", SIZE="200x80"](NULL)
  ),
  hbox(
    fill(),
    button[PADDING="10x4"]("&OK", cb_createtable_ok),
    button[PADDING="10x4"]("&Cancel", cb_default_close)
  )
))

dlg_create_index = dialog[TITLE="Create index", MAP_CB=cb_createindex_map](vbox[EXPAND="YES", GAP="5", NMARGIN="10x10"](
  frame[TITLE="Index name"](hbox[NMARGIN="5x5", NORMALIZESIZE="VERTICAL"](
    list[NAME="dblist", DROPDOWN="YES"](cb_update_tablelist),
    label("."),
    text[NAME="name", EXPAND="HORIZONTAL"](NULL),
    label("on"),
    list[NAME="tablelist", DROPDOWN="YES"](cb_update_columns)
  )),
  toggle[NAME="unique"]("Unique", NULL),
  hbox(
    frame[TITLE="Unindexed columns"](hbox[NMARGIN="5x5"](
      list[NAME="llist", EXPAND="YES"](NULL)
    )),
    vbox[NORMALIZESIZE="HORIZONTAL"](
      fill(),
      button(">>", cb_addall),
      button(">", cb_addone),
      button("<", cb_delone),
      button("<<", cb_delall),
      fill()
    ),
    frame[TITLE="Indexed columns"](hbox[NMARGIN="5x5"](
      list[NAME="rlist", EXPAND="YES"](NULL)
    ))
  ),
  hbox[NORMALIZESIZE="HORIZONTAL"](
    fill(),
    button[PADDING="10x4"]("&OK", cb_createindex_ok),
    button[PADDING="10x4"]("&Cancel", cb_default_close)
  )
))

dlg_create_view = dialog[TITLE="Create view", MAP_CB=cb_createtable_map](vbox[EXPAND="YES", GAP="5", NMARGIN="10x10"](
  frame[TITLE="View name"](hbox[NORMALIZESIZE="VERTICAL", NMARGIN="5x5"](
    list[NAME="dblist", DROPDOWN="YES"](NULL),
    label("."),
    text[NAME="name", EXPAND="HORIZONTAL"](NULL),
    fill()
  )),
  frame[TITLE="As"](
    multiline[NAME="schema", EXPAND="YES", SIZE="200x80"](NULL)
  ),
  hbox(
    fill(),
    button[PADDING="10x4"]("&OK", cb_createview_ok),
    button[PADDING="10x4"]("&Cancel", cb_default_close)
  )
))

dlg_create_trigger = dialog[TITLE="Create trigger", MAP_CB=cb_createtrigger_map](vbox[EXPAND="YES", GAP="5", NMARGIN="10x10"](
  frame[TITLE="Trigger name"](hbox[NORMALIZESIZE="VERTICAL", NMARGIN="5x5"](
    list[NAME="dblist", DROPDOWN="YES"](cb_update_tableviewlist),
    label("."),
    text[NAME="name", EXPAND="HORIZONTAL"](NULL),
    list[NAME="trigger_type", DROPDOWN="YES"](cb_update_tableviewlist),
    list[NAME="trigger_action", DROPDOWN="YES"](cb_createtrigger_triggeraction),
    hbox[NAME="updateofbox", NORMALIZESIZE="VERTICAL"](
      toggle[control="updateof"]("of", cb_toggle_control),
      text[NAME="updateof", ACTIVE="NO"](NULL)
    ),
    label("on"),
    list[NAME="tableviewlist", DROPDOWN="YES"](NULL)
  )),
  toggle[NAME="foreachrow"]("for each row", NULL),
  hbox(
    toggle[control="when"]("when", cb_toggle_control),
    text[NAME="when", EXPAND="HORIZONTAL", ACTIVE="NO"](NULL)
  ),
  frame[TITLE="Trigger code"](
    multiline[NAME="code", EXPAND="YES", SIZE="200x80"](NULL)
  ),
  hbox(
    fill(),
    button[PADDING="10x4"]("&OK", cb_createtrigger_ok),
    button[PADDING="10x4"]("&Cancel", cb_default_close)
  )
))
